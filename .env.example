# =============================================================================
# SmartTestHub Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit the .env file to version control
#
# ‚ö†Ô∏è SECURITY NOTICE:
# - Use development/testnet keys only ‚Äì NEVER production keys
# - Rotate keys regularly
# - Use Docker secrets in production environments
# - Validate all API keys before deployment
# - Keep the actual .env file in .gitignore
# =============================================================================

# =============================================================================
# üîë API KEYS & EXTERNAL SERVICES
# =============================================================================

# Ethereum Network API Keys
# Get your API key from: https://dashboard.alchemy.com/
ALCHEMY_API_KEY=your_alchemy_api_key_here

# Blockchain Explorer API Keys
# Get your API key from: https://etherscan.io/apis
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# Price Data APIs
# Get your API key from: https://coinmarketcap.com/api/
COINMARKETCAP_API_KEY=your_coinmarketcap_api_key_here

# Alternative RPC Providers (optional)
# Get from: https://infura.io/dashboard
INFURA_API_KEY=your_infura_api_key_here

# Additional Network Explorer APIs (optional)
POLYGONSCAN_API_KEY=your_polygonscan_api_key_here
ARBISCAN_API_KEY=your_arbiscan_api_key_here
BSCSCAN_API_KEY=your_bscscan_api_key_here

# =============================================================================
# üîê PRIVATE KEYS & SECURITY (DEVELOPMENT ONLY)
# =============================================================================
# ‚ö†Ô∏è WARNING: Use test/development keys only ‚Äì NEVER production keys
# Consider hardware wallets or secure key management systems for production

# Private key for contract deployment/testing (without 0x prefix)
# Generate a test key: openssl rand -hex 32
PRIVATE_KEY=your_64_character_private_key_for_testing_only

# Mnemonic phrase for HD wallet derivation (12 or 24 words)
# Generate test mnemonic: bip39-gen --words 12
MNEMONIC="your twelve word mnemonic phrase for testing purposes only never use production keys"

# Deployer address (derived from private key above)
DEPLOYER_ADDRESS=0x1234567890123456789012345678901234567890

# =============================================================================
# üåê NETWORK CONFIGURATIONS
# =============================================================================

# Ethereum Mainnet
MAINNET_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}
MAINNET_CHAIN_ID=1

# Ethereum Testnets
GOERLI_RPC_URL=https://eth-goerli.alchemyapi.io/v2/${ALCHEMY_API_KEY}
GOERLI_CHAIN_ID=5

SEPOLIA_RPC_URL=https://eth-sepolia.alchemyapi.io/v2/${ALCHEMY_API_KEY}
SEPOLIA_CHAIN_ID=11155111

# Layer 2 Networks
POLYGON_RPC_URL=https://polygon-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}
POLYGON_CHAIN_ID=137

POLYGON_MUMBAI_RPC_URL=https://polygon-mumbai.alchemyapi.io/v2/${ALCHEMY_API_KEY}
POLYGON_MUMBAI_CHAIN_ID=80001

ARBITRUM_RPC_URL=https://arb-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}
ARBITRUM_CHAIN_ID=42161

# Solana Network
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
SOLANA_DEVNET_RPC_URL=https://api.devnet.solana.com
SOLANA_TESTNET_RPC_URL=https://api.testnet.solana.com

# Local Development
LOCALHOST_RPC_URL=http://localhost:8545
LOCALHOST_CHAIN_ID=31337

# =============================================================================
# ‚ö° PERFORMANCE & RESOURCE LIMITS
# =============================================================================

# Container Resource Limits (Docker Compose)
MAX_MEMORY=4G
MAX_CPUS=2.0
RESERVED_MEMORY=2G
RESERVED_CPUS=1.0

# Parallel Processing Configuration
MAX_PARALLEL_JOBS=3
MAX_CONCURRENT_TESTS=5
COMPILATION_TIMEOUT=300
TEST_TIMEOUT=600
COVERAGE_TIMEOUT=900

# Gas Configuration
GAS_LIMIT=8000000
GAS_PRICE=20000000000
MAX_FEE_PER_GAS=100000000000
MAX_PRIORITY_FEE_PER_GAS=2000000000

# =============================================================================
# üîß TOOL CONFIGURATIONS
# =============================================================================

# Hardhat Configuration
HARDHAT_NETWORK=localhost
HARDHAT_VERBOSE=false
HARDHAT_SHOW_STACK_TRACES=false
HARDHAT_MAX_MEMORY=4096

# Foundry Configuration
FOUNDRY_PROFILE=default
FOUNDRY_RPC_URL=${LOCALHOST_RPC_URL}
FOUNDRY_PRIVATE_KEY=${PRIVATE_KEY}
FOUNDRY_ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}

# Slither Configuration
SLITHER_ARGS=--exclude-dependencies --exclude-informational
SLITHER_TIMEOUT=300
SLITHER_MAX_RETRIES=3

# Solidity Compiler
SOLC_VERSION=0.8.19
SOLC_OPTIMIZER=true
SOLC_OPTIMIZER_RUNS=200

# Anchor Configuration (Solana)
ANCHOR_PROVIDER_URL=${SOLANA_DEVNET_RPC_URL}
ANCHOR_WALLET=~/.config/solana/id.json

# =============================================================================
# üìä REPORTING & OUTPUT
# =============================================================================

# Report Formats (comma-separated: json,html,sarif,text,lcov)
REPORT_FORMATS=json,html,sarif
OUTPUT_DIR=./reports
LOGS_DIR=./logs

# Coverage Configuration
COVERAGE_THRESHOLD=80
COVERAGE_EXCLUDE_PATTERNS=test/**,mock/**,interfaces/**,node_modules/**

# Report Storage
REPORTS_RETENTION_DAYS=30
AUTO_CLEANUP_REPORTS=true
COMPRESS_OLD_REPORTS=true

# =============================================================================
# üêõ DEVELOPMENT & DEBUGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=info
DEBUG_MODE=false
VERBOSE_OUTPUT=false
ENABLE_TRACE=false

# Development Features
WATCH_MODE=true
AUTO_RESTART=true
ENABLE_PROFILING=false
HOT_RELOAD=true

# Testing Configuration
RUN_INTEGRATION_TESTS=true
RUN_UNIT_TESTS=true
RUN_FUZZ_TESTS=false
SKIP_SLOW_TESTS=false
PARALLEL_TESTS=true

# =============================================================================
# üõ°Ô∏è SECURITY & MONITORING
# =============================================================================

# Health Check Configuration
ENABLE_HEALTH_CHECKS=true
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=40s

# Security Scanning
ENABLE_SECURITY_SCANS=true
SECURITY_SCAN_TIMEOUT=600
FAIL_ON_HIGH_SEVERITY=true
FAIL_ON_MEDIUM_SEVERITY=false

# Monitoring & Metrics
ENABLE_METRICS=false
METRICS_PORT=9090
ENABLE_TRACING=false
PROMETHEUS_ENDPOINT=/metrics

# Error Handling
ENABLE_ERROR_RECOVERY=true
MAX_RETRY_ATTEMPTS=3
RETRY_DELAY_SECONDS=5
GRACEFUL_SHUTDOWN_TIMEOUT=30

# =============================================================================
# üìù VALIDATION & SETUP INSTRUCTIONS
# =============================================================================
#
# üöÄ Quick Setup:
# 1. Copy this file: cp .env.example .env
# 2. Replace all placeholder values with actual environment values
# 3. Ensure .env is in your .gitignore file
# 4. Test Docker Compose configuration: docker-compose config
# 5. Validate environment variables (if available): make validate-env
#
# üìã Required Variables (minimum for basic functionality):
# ‚úÖ ALCHEMY_API_KEY or INFURA_API_KEY
# ‚úÖ ETHERSCAN_API_KEY
# ‚úÖ COINMARKETCAP_API_KEY
#
# üîß Optional but Recommended:
# - PRIVATE_KEY (for deployment testing)
# - Additional RPC provider keys
# - Security scanning enabled
# - Health checks configured
#
# üîí Security Checklist:
# ‚ñ° All API keys are development/testnet only
# ‚ñ° Private keys are for testing purposes only
# ‚ñ° .env file is added to .gitignore
# ‚ñ° Resource limits are appropriate for your system
# ‚ñ° Security scanning is enabled
# ‚ñ° Health checks are configured
# ‚ñ° API keys have appropriate rate limits
# ‚ñ° No production secrets in development environment
#
# üß™ Testing Your Configuration:
# - Test API connectivity:
#   curl -X POST ${MAINNET_RPC_URL} \
#     -H "Content-Type: application/json" \
#     -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}'
# - Validate Docker setup:
#   docker-compose config
# - Check resource allocation:
#   docker stats
#
# üí° Production Considerations:
# - Use Docker secrets or external secret management
# - Implement proper key rotation
# - Enable comprehensive monitoring
# - Set up alerting for failures
# - Use dedicated RPC endpoints for production
#
# =============================================================================